## vim: syn=mako
<%inherit file="../../entry.tmpl.html"/>
<%!
title = u'theseit r332에 얽힌 비화'
when = '2007-10-18T09:41:12+09:00'
tags = [u'개발', u'theseit']
original = 'http://mearie.org/journal/2007/10/episode-on-theseit-r332'
%>

망한 (일명) 블로그를 조금이라도 활용하기 위해서 요즘 개발하고 있는 것들에 대해서 얘기하겠다. -_-; 쓸 거리를 찾아 다니느니 차라리 IRC 등지에서 말하는 걸 얘기하는 게 더 나을 것 같아서...

*요즘 다시 [theseit](http://theseit.ruree.net/) 개발에 손 대고 있다.* 최근 한 달 동안 상당히 생산성이 좋은 (다른 말로 하면 수업 시간에는 열심히 자고 매일 코딩하는) 생활을 하고 있는데, 내가 C++를 한 두 해 한 것도 아니지만 어처구니 없는 버그들이 너무 많이 나타나서 밤잠을 설칠 때가 다반사이다. 아마 앞으로 며칠간은 이런 내용으로 블로그를 채울 것 같으니 이해해 주시라.

[r332](http://trac.theseit.ruree.net/changeset/332)에서 고쳐진 버그는 지금까지 만났던 버그 형태 중에서 가장 특이한 것이었는데, 어떻게 말하면 "BMS 제작자가 모르고 만들었던 문제가 개발자를 만나 고생하는" 형태라고도 할 수 있었다. 그도 그럴 것이 웬만한 BMS들에서는 잘 되는 것이 몇몇 BMS에서 애니메이션이 개판으로 보이는 것이었으니까.

아시는 분은 아시겠지만 BMS에 들어 가는 애니메이션용 이미지 파일은 검은 색을 투명색으로 처리하는 관례가 있다. (어떤 미친 BMS는 완전히 검은 색이 아니라 비디오 오버레이 용으로 사용하는 `#040004` 같은 색깔을 쓰는 경우도 있는데 이거 지원해야 하나 마나 고민 중이다.) 애니메이션용 파일이 보통 쌩 BMP이기에 사용하는 편법으로, theseit에서는 SDL의 colorkey라고 하는 기능을 통해 이 부분을 지원하고 있었다. 보통은 잘 되길래 내버려 뒀던 게 화근이었다.

첫 버그는 어떤 BMS가 거의 다 잘 나오는데 특정한 이미지에서 특정한 색이 검은 색으로 (원래는 회색이던 것이) 나오는 것이었다. 원래 그런가 싶어서 원본 이미지를 봤더니 그런 것도 아니고... 좀 생각해 보니까 `SDL_MapRGB` 함수가 주어진 색깔에 가장 비슷한 값을 반환한다는 것을 간과한 것이었다. 해당 이미지는 8비트 팔레트를 쓰고 있었고, 팔레트에 검정색이 아예 없었으니 검정색과 비슷하게 보이는 회색을 선택했던 거다. 결국 `SDL_MapRGB` 반환 후에 팔레트가 있는 경우 팔레트에 있는 색과 실제로 줬던 색이 같은지 확인하도록 해서 해결했었다.

그런데 이 문제를 해결하고 나서 다른 BMS를 틀어 봤는데 이번에는 colorkey가 적용 안 되는 문제가 생겨서 환장할 뻔 했다. 아마도 아까 전에 말한 `#040004` 따위를 colorkey로 쓰는 놈들의 일종이리라 생각했는데, 분명 멀쩡한 검정색인데도 안 나오는 것이었다. 이건 무슨 신종 BMP 포맷인가? 싶어서 디버거로 분석해 보니 분명 colorkey는 설정되어 있는데 `SDL_ConvertSurface`를 거치고 나면 투명색이 사라지는 것이었다. (이 함수의 내부 동작은 그냥 주어진 surface를 만들고 거기다가 blit하는 게 다라서 얘만 뭔가 특이하게 안 되는 게 있는 것도 아니다. 이거 확인하려고 SDL 소스까지 뒤졌다.) 이게 무슨 아닌 밤중에 홍두깨인가 싶어서 colorkey에 해당하는 팔레트를 확인해 봤는데 검은색이 나온다. 어쩌라고?

에라 모르겠다 싶어서 딴 짓 하다가 디버거를 다시 켰는데 5분만에 문제의 원인을 찾았다.

**아 놔 망할 팔레트에 검은색이 여러 개네**

팔레트에 검은색이 여러 개 있으니 당연히 `SDL_MapRGB`는 아무 거나 선택해서 반환했을 것이고, 진짜로 사용하는 검은색은 따로 있으니 당연히 colorkey가 적용되어 있지 않았던 것이다. -_-; 결국 이런 경우에는 24비트 비트맵으로 promote하게 해서 고쳤다. (이거 짜는 과정에 double free 버그가 또 생겨서 삽질 좀 했다.)

그 밖에 오늘 아침에 잡은 버그도 또 하나 있는데 이건 숙제 하고 내일 쯤 써 보겠다.

