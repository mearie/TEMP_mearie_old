## vim: syn=mako
<%inherit file="../../entry.tmpl.html"/>
<%!
title = u'노트북 갈아 엎기 4'
when = '2006-01-19T05:37:02+09:00'
tags = [u'이야기']
original = 'http://tokigun.net/blog/entry.php?blogid=49'
%>

모 군-_-의 서버에 올려 놓았던 30기가 가량의 백업 파일들을 다시 받으려고 보니까 윈도우가 기본적으로 지원하는 FTP 클라이언트가 별로 좋지 못하다는 것을 깨달았다. (예를 들어서 몇몇 FTP 서버에 접속조차 하지 못 하는 경우가 있다) 그래서 FTP 클라이언트 용으로 [Filezilla 2.2.18](http://filezilla.sf.net/)을 깔았다. 파일질라는 기본 기능에 충실하면서 SFTP를 지원한다는 점 때문에 클라이언트를 쓰기 시작했고, 이름은 같지만 FTP 서버 역할을 하는 파일질라 서버도 함께 쓰게 되었다. 이 두 프로그램은 깔끔하지만 필요한 기능은 모두 지원한다는 점이 가장 매력적이며 오픈 소스 소프트웨어이기도 하다. 하나 아쉬운 점이 있다면 파일질라 서버의 디렉토리 설정 창만은 그렇게 깔끔한 편이 아닌데 좀 더 직관적으로 바뀌었으면 좋겠다. (차라리 가상 파일 시스템을 트리 형태로 보여 주고 거기에 물리 파일 시스템을 주렁 주렁 매다는 형식이라면 어떨까 싶다)

비단 프로그래밍 하는 사람이 아니더라도 많은 사람들이 윈도우에 기본으로 포함된 notepad.exe(-\_-)를 참지 못 하고 별도의 텍스트 에디터를 깔아 쓰는 경우가 많다. 나 같은 경우 [vim](http://vim.org/) 애용자라서 gVim 6.4를 깔아 놓고 모든 곳에서 공통으로 사용하는 [.vimrc](http://hg.mearie.org/private/settings-vim/) 파일을 복사해서 설정을 간단하게 마쳤다. (rc 파일은 장단점이 딱 나뉘는 편이다. 가장 큰 장점은 백업하기 무진장 간단하다는 것이고, 가장 큰 단점은 설정을 자동적으로 바꾸기가 드럽게 힘들다는 것이다. -\_-) 그리고 vim을 켜 봤는데, 아뿔싸. 자주 사용하는 [Raize](http://www.raize.com/DevTools/Tools/RzFont.asp) 글꼴이 안 깔려 있어서 기본 글꼴로 나오는 것이었다. 그래서 글꼴을 (물론 공짜로) 받아서 깔아 놓고 보니까 이제 좀 볼만하다 싶었는데 이번엔 줄이 뭔가 많이 띄어져서 보인다. 생각해 보니까 linespace 설정이 뭔가 원래대로 돌아 간 느낌이 들어서 .vimrc에 set lsp=0을 넣어 주니 이제서야 익숙한 그 화면이 나온다.

내가 vim을 좋아하는 이유는 (그래서 다른 것과 다르게 두 문단이나 할애하는 이유는) 여러 가지가 있는데, 그 중 첫 번째는 현존하는 에디터 중에 가장 지 맘대로 뜯어 고치기 좋은 프로그램이기 때문이다. 혹시나 vim을 안 써 보신 분을 위해서 간단하게 설명하자면 vim에는 자체 스크립트 언어가 들어 있어서 이걸 갖고 별의별 짓이 가능하다. 앞에서 내가 쓰는 .vimrc를 보신 분은 아시겠지만 보이는 옵션 수만 수십 개가 된다. -_-; 덕분에 덤으로 생긴 장점이 소스 하이라이팅이 꽤 잘 된다는 것으로, 많은 수의 윈도우 텍스트 에디터들이 소스 하이라이팅을 그리 깔끔하지 못 하게 처리하는 것과는 달리 vim은 스크립트 언어를 사용해서 상당히 세밀하게 하이라이팅이 가능하다. 기본적으로 제공되는 하이라이팅 스크립트들은 대부분 다른 사람들이 필요해서 만든 뒤에 보내 온 것으로, 사실 알고 보면 텍스트 파일을 그냥 보여 주는 것에 불과한 vim 자체 도움말도 별도의 하이라이팅을 사용해서 보여 줄 정도이다. (물론 구문 해석을 하는 수준까지는 아니기 때문에 살짝 문제가 생기는 게 있긴 하다. 예를 들어서 루비에서 <`"foo#{proc{'ahehheh'}.call}bar"`>라는 내용이 어떻게 하이라이팅되는 가 보시라.) 대신 그 특성상 하이라이팅을 켜면 큰 파일에서 속도가 미친 듯이 느려진다는 단점이 있긴 한데 1메가 이상 되는 파일을 하이라이팅 켜고 편집할 이유는 없으므로 보통 무시한다. 그리고 다른 하나로 hjkl 등으로 대표되는 특수한 키 배치가 있는데, 물론 이 특이한 키 배치 때문에 초보자한테는 적합하지 않다고 하지만 (이럴 때는 gVim easy를 쓰시라) 일단 한 번 익숙해지면 상당한 효율을 낼 수 있다는 점 때문에 높이 치는 점이다.

그리고 더 이상 PuTTY에서 irssi 열고 IRC 하는 게 짜증나서 [mIRC](http://mirc.com/)를 깔았다. 처음에는 mIRC 6.16 영문판을 깔았는데 쓰다 보니까 메시지가 한글화 안 된 게 너무 귀찮아서 [울보천사의 한글 mIRC 6.16](http://mirckorea.net/)으로 바꿔 깔았는데, 이 시점에서 나는 mirc.ini도 함께 백업하지 않은 것을 상당히 심각하게 후회했다. 예전에는 X-iRc 2.6.1에다가 mIRC 6.16을 덮어 씌웠기 때문에 스크립트나 설정 등이 그대로 보존되었는데 X-iRc가 없는 상태에서 그냥 깔아 버리니 여러 가지로 난감한 점이 많았다. 뭐 트레이로 창 넣을 건지 말 건지 등등의 설정을 열심히 해 준 뒤에 스크립트를 살짝 고치고 등등의 삽질을 했는데, 그 중 내 골을 정통으로 강타한 문제가 두 가지 있었으니 한 가지는 아무리 wav 파일을 지정해도 사운드가 안 나오는 것이었고 (결국 스피커가 꺼져 있던 것으로 판명남) 다른 한 가지는 대화명에 색깔 지정하는 걸 몰라서 (Address Book을 뒤져 보면 설정이 있는데, 이걸 순서를 거꾸로 넣는 바람에 priority가 다 뒤엉켜서 전혀 적용이 안 되는 것이었다. orz) 삽질한 것이었다. 앞으로는 그냥 mirc.ini를 백업해서 들고 가야 할 것 같다. -_-

이제 백업 파일 중 중요한 것들은 하드디스크에 모두 올려 놓았으니까 작업을 위한 환경을 갖추는 게 가장 중요할 듯 싶다. 그런데 뭔가 빼 먹은 게 있는 것 같은데... 뭔지 기억이 안 난다. OTL <small>아 맞다 미디어 플레이어;;</small>

<div class="afternote">

전체 글 목록은 다음과 같다.

* 2006-01-18: [노트북 갈아 엎기 1](/journal/2006/01/how-to-configure-laptop-part-1)
* 2006-01-18: [노트북 갈아 엎기 2](/journal/2006/01/how-to-configure-laptop-part-2)
* 2006-01-18: [노트북 갈아 엎기 3](/journal/2006/01/how-to-configure-laptop-part-3)
* **2006-01-19: [노트북 갈아 엎기 4](/journal/2006/01/how-to-configure-laptop-part-4)**
* 2006-01-20: [노트북 갈아 엎기 5](/journal/2006/01/how-to-configure-laptop-part-5)

한편 글에서 예제로 들었던 <`"foo#{proc{'ahehheh'}.call}bar"`>의 하이라이팅 문제는 Vim 7인가에서 고쳐진 것 같다. <small>(2010-03-25)</small>

</div>

