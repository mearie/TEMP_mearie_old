## vim: syn=mako

**Esotope**는 [난해한 프로그래밍 언어](http://ko.wikipedia.org/wiki/%EB%82%9C%ED%95%B4%ED%95%9C_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)를 위한 구현체 모음입니다. 이런 목적으로 만들고 있습니다:

* 모든 중요한 난해한 프로그래밍 언어에 대해 괜찮은 구현체(인터프리터 아니면 컴파일러)를 만들고,
* 더 나아가 서로 다른 난해한 프로그래밍 언어 사이의 변환을 가능하게 만들며 (즉, "브레인퍽을 비펀지로 변환"하거나 "주어진 문자열을 출력하는 Malbolge 코드를 생성"하는 등의 작업을 어렵지 않게 할 수 있으며)[^1],
* 이런 일들을 지원하기 위한 일반적인 프레임워크를 제공합니다.

현재 구현은 Ocaml로 만들고 있습니다. 기존에 만들었던 [몇몇 구현들](#옛-구현들) 또한 "esotope" 이름이 붙어 있기도 한데 시간이 나는 대로 현재의 Ocaml 구현으로 옮기고 있습니다.

[^1]: [EsCo](http://esco.sourceforge.net/)와 같이 단순히 여러 언어를 구현만 하는 프로젝트와 가장 크게 차이나는 점입니다.


사용법
==========

Esotope는 현재 개발이 한창 진행되고 있는 터라 안정된 버전이 아직 없습니다. **개발 버전은 [머큐리얼 저장소](http://hg.mearie.org/esotope/esotope)에서 받을 수 있습니다.** ([비트버켓](https://bitbucket.org/lifthrasiir/esotope-esotope/)에도 미러링되어 있습니다.)

Esotope는 보통 주어진 코드를 실행하는 데 흔히 쓰는데, `-f` 옵션으로 입력 언어를 지정하면 자동으로 실행됩니다:

~~~~
$ cat hello.b
++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<++++++++++++
+++.>.+++.------.--------.>+.>.
$ esotope -f brainfuck hello.b
Hello World!
$ esotope hello.b
Hello World!
~~~~

뒷쪽에서 볼 수 있듯이 파일 확장자가 주어졌을 경우 `-f` 옵션 없이도 자동으로 언어를 감지해 낼 수도 있습니다(이 경우 브레인퍽은 `.b` 확장자를 씁니다). 지원하는 모든 확장자와 약어를 보려면 `--list-kinds` 옵션을 씁니다.

Esotope를 여러 입력 언어를 다른 출력 언어로 변환하는 데 쓸 수도 있습니다. 예를 들어, 임의의 텍스트(`text`라는 이름의 "언어"로 간주합니다)를 Spoon 코드로 바꾸려면 `-t` 옵션을 함께 줘서 다음과 같이 실행합니다:

~~~~
$ echo Hello, world! | ./esotope -f text -t spoon -v | ./esotope -f spoon
Found a path with 5 processors (weight=36): stream --(10)--> text --(10)--> brainfuck --(5)--> brainfuck-with-exit --(1)--> spoon --(10)--> buffer
Hello, world!
~~~~

여기서 `-v` 옵션은 입력에서 출력으로 가는데 사용한 내부 경로를 보여 주는데 썼습니다. 경로에서 볼 수 있듯, 텍스트를 Spoon 코드로 바로 바꾸는 변환기가 없기 때문에 브레인퍽을 중간 언어로 사용했습니다. Esotope는 설령 직접 변환이 불가능하더라도 이런 식으로 중간 언어를 거쳐 변환이 가능하다면 자동으로 변환을 수행합니다.


지원하는 언어
=============

2011년 9월 현재 esotope는 다음 언어를 지원합니다:

* Befunge-93
* Brainfuck (+ "종료" 명령을 지원하는 내부 표현)
* FALSE
* HQ9+
* Kipple
* Malbolge (+ Malbolge의 정규화된 버전)
* Minus
* Ook!
* Spoon
* Unlambda
* Whirl
* Whitespace
* 아희
* 텍스트 (주어진 코드를 그대로 출력하는 "언어")

더불어 다음 (간단하지 않은) 변환기도 함께 지원합니다:

* Brainfuck을 Minus로
* 텍스트를 Brainfuck 및 Unlambda로


옛 구현체
=========

역사적 이유 때문에 옛날 구현체 중에 "esotope"라는 이름이 붙어 있는 것들이 꽤 있습니다:

* Brainfuck 컴파일러, [`esotope-bfc`](bfc/)
* Befunge-93 인터프리터 (작은 코드 중시)
* Funge-98 인터프리터, [PyFunge](/projects/pyfunge/)
* 3code 인터프리터
* Migol 인터프리터
* NULL 인터프리터
* Whirl 인터프리터 (작은 코드 중시)
* Whitespace 인터프리터 및 어셈블러, [`esotope-ws`](ws) (모양 중시)

다음 구현체들은 현재의 Esotope 구현으로 완전히 대체되어 더 이상 사용하지 않습니다:

* 아희 인터프리터

